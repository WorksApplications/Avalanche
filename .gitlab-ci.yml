backend-build:
    stage: build
    image: golang:1.9
    script:
        - mkdir -p /go/src/git.paas.workslan/resource_optimization
        - ln -s ${CI_PROJECT_DIR} /go/src/git.paas.workslan/resource_optimization/dynamic_analysis
        - cd /go/src/git.paas.workslan/resource_optimization/dynamic_analysis
        - curl -sS https://github.com/go-swagger/go-swagger/releases/download/0.15.0/swagger_linux_amd64 -L > /go/bin/swagger
        - chmod +x /go/bin/swagger
        - swagger generate server -f api/collect.yml -t generated_files -A collect
        - make dep
        - make backend
    cache:
        key: golang
        paths:
            - /go/src/github.com
            - /go/src/golang.org
            - /go/src/google.golang.org
            - /go/src/gopkg.in
    artifacts:
        paths:
            - bin/collect
            - bin/detect

front-build:
    stage: build
    image: node:10.8.0
    script:
        - cd front
        - yarn add --dev webpack webpack-cli
        - npm install
        - PATH=$PATH:$(pwd)/node_modules/.bin yarn build
    cache:
        key: react
        paths:
            - front/node_modules
    artifacts:
        paths:
            - front/public/app.js
            - front/public/app.css
            - front/public/app.js.map
            - front/public/index.html

push-images:
    stage: deploy
    image: docker:stable
    script:
        - docker info
        - ls -lR
        - apk add make
        - make pushi
        - env

